#include <stdio.h>
#include <stdlib.h> // чтобы пользоваться функцией rand
#include <locale.h> // библиотека языков
#define N 2
int main(void)
{
	int x[N][N]; // массив из N на N элементов
	int i, j;
	
	setlocale(LC_ALL, "Rus"); // локализация на русский язык
	printf("Исходный массив:\n");
	// ввод массива
	for (i = 0; i < N; i++)
	{
		for (j = 0; j < N; j++)
		{
			x[i][j] = rand() % 10; // число рандомное может быть большим, а нам не нужно большое
			printf("%4d ", x[i][j]); // выделяем место для одного символа
		}
		printf("\n");
	}
	printf("\n"); // для пропуска между исходным и выводящим массивом

	int stol; // переменная для запоминания элемента

	for (i = 0; i < (N+1)/2; i++) //рассматриваем половину строк. (N+1) т.к. массив может быть не с четной стороной.
	{
		for (j = 0; j < N-1-j; j++) // рассматриваем только половину столбцов. T.е. по сути рассматриваем лишь четверть массива, т.к. остальные элементы учавствуют в обмене 
		{
			stol = x[i][j]; // запоминаем текущий элемент
			x[i][j] = x[N - j - 1][i]; // присваиваем нашему элементу значение элемента кот. встанет на его место при повороте массива на 90*
			x[N- j - 1][i] = x[N - i - 1][N - j - 1]; // "поворотный" элемент из прошлого шага заменяем по тому же методу
			x[N - i - 1][N - j - 1] =x[j][N - i - 1]; // еще одно присвоение "поворотного" элемента
			x[j][N - i - 1] = stol; // последняя 4 замена (потому что сторон 4 )

		/* замена элементов проводится против часовой стрелки

		  (1) stol = x[i][j]

		  (5)stol╼╼╼╼┒
		             ▼
		     []╾╾╾╾╾[](4)
		     ▲       │ 
		     │       ▼ 
		  (2)[]◀╾╾╾╾[](3)
		
		*/
		}
	}

	// вывод массива
	printf("Повернутый массив:\n");

	for (i = 0; i < N; i++)
	{
		for (j = 0; j < N; j++)
			printf("%4d ", x[i][j]);
		 printf("\n");
	}
	return 0;
} // скобка
